package com.capgemini.springrestforestrymanagement.dao;

import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.PersistenceUnit;
import javax.persistence.TypedQuery;
import org.springframework.stereotype.Repository;
import com.capgemini.forestrymanagement.springbootdto.SchedularBean;
import com.capgemini.forestrymanagement.springbootexception.SchedularException;

@Repository
public class SchedularDaoImpl implements SchedularDao {
	@PersistenceUnit
	private EntityManagerFactory factory;

	@Override
	public boolean register(SchedularBean bean) {
		EntityManager manager = factory.createEntityManager();
		EntityTransaction transaction = manager.getTransaction();
		try {
			transaction.begin();
			manager.persist(bean);
			transaction.commit();
			return true;
		}catch (Exception e) {
			throw new SchedularException("Schedular already exists");
		}
	}

	@Override
	public boolean updateSchedular( SchedularBean bean) {
		try {
			EntityManager manager = factory.createEntityManager();
			EntityTransaction transaction = manager.getTransaction();
			transaction.begin();
			SchedularBean bean1 = manager.find(SchedularBean.class,bean.getSchedulerId());
			bean1.setSchedulerPassword(bean.getSchedulerPassword());
			bean1.setSchedulerName(bean.getSchedulerName());
			transaction.commit();
			return true;
		} catch (Exception e) {
			throw new SchedularException("Schedular already updated");
		}
	}

	@Override
	public boolean deleteSchedular(int schedulerId) {
		try {
			EntityManager manager = factory.createEntityManager();
			EntityTransaction transaction = manager.getTransaction();
			transaction.begin();
			SchedularBean bean = manager.find(SchedularBean.class, schedulerId);
			if (bean != null) {
				manager.remove(schedulerId);
				transaction.commit();
				return true;
			}
			return false;
		}catch (Exception e) {
			throw new SchedularException("Schedular not Deleted");
		}	
	}

	@Override
	public List<SchedularBean> getAllSchedular() {
		try {
		String jpql = "from SchedularBean";
		EntityManager manager = factory.createEntityManager();
		TypedQuery<SchedularBean> query = manager.createQuery(jpql, SchedularBean.class);
		return query.getResultList();
	    }catch (Exception e) {
			throw new SchedularException("Schedular already exists");
		}
	}

	@Override
	public SchedularBean getSchedularBean(int schedulerId) {
		String jpql = "from SchedularBean where schedulerId=:schedulerId";
		EntityManager manager = factory.createEntityManager();
		TypedQuery<SchedularBean> query = manager.createQuery(jpql, SchedularBean.class);
		query.setParameter("schedulerId", schedulerId);
		try {
			return query.getSingleResult();
		} catch (Exception e) {
			e.printStackTrace();
			throw new SchedularException("Schedular not found");
		}
	}
}
