package com.capgemini.forestrymanagementsystem.hibernateforestrymanagementsystem.hibernatedao;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;

import com.capgemini.forestrymanagement.hibernatebean.SchedularBean;

public class SchedularDaoImpl implements SchedularDao {
	EntityManagerFactory factory = Persistence.createEntityManagerFactory("Test");

	@Override
	public boolean addSchedular(SchedularBean bean) {
		boolean isAdded = false;
		EntityManager manager = factory.createEntityManager();
		EntityTransaction transaction;
		try {
			transaction = manager.getTransaction();
			transaction.begin();
			manager.persist(bean);
			transaction.commit();
			isAdded = true;
		} catch (Exception e) {
			e.printStackTrace();
		}
		manager.close();
		return isAdded;
	}

	@Override
	public boolean modifySchedular(SchedularBean bean, int schedulerId) {
		boolean isUpdated = false;
		EntityManager manager = factory.createEntityManager();
		SchedularBean bean1 = manager.find(SchedularBean.class, schedulerId);
		EntityTransaction transaction = manager.getTransaction();
		if (bean1 != null) {
			try {
				transaction.begin();
				int schedulerId1 = bean.getSchedulerId();
				if (schedulerId1 > 0) {
					bean1.setschedulerId(schedulerId1);
				}
				String schedulerName = bean.getSchedulerName().trim();
				if (schedulerName != null && schedulerName.isEmpty()) {
					bean1.setschedulerName(schedulerName);
				}
				String dlvryDate = bean.getDeliveryDate().trim();
				if (dlvryDate != null && dlvryDate.isEmpty()) {
					bean1.setDeliveryDate(dlvryDate);
				}
				int customerid = bean.getCustomerId();
				if (customerid > 0) {
					bean1.setschedulerId(customerid);
				}
				int productid = bean.getProductId();
				if (productid > 0) {
					bean1.setProductId(productid);
				}
				int qty = bean.getQty();
				if (qty > 0) {
					bean1.setQty(qty);
				}
				transaction.commit();
				isUpdated = true;
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		manager.close();
		return isUpdated;
	}

	@Override
	public boolean deleteSchedular(int Schedularid) {
		boolean isDeleted = false;
		EntityManager manager = factory.createEntityManager();
		EntityTransaction transaction = null;
		SchedularBean bean = manager.find(SchedularBean.class, Schedularid);
		if (bean != null) {
			transaction = manager.getTransaction();
			transaction.begin();
			manager.remove(bean);
			transaction.commit();
			isDeleted = true;
		}
		manager.close();
		return isDeleted;
	}
}
