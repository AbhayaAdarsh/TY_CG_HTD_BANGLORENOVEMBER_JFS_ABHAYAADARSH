package com.capgemini.springrestforestrymanagement.dao;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.PersistenceUnit;
import javax.persistence.TypedQuery;

import org.springframework.stereotype.Repository;

import com.capgemini.springrestforestrymanagement.dto.AdminBean;
import com.capgemini.springrestforestrymanagement.exception.AdminException;

@Repository
public class AdminDaoImpl implements AdminDao {
	@PersistenceUnit
	EntityManagerFactory factory;

	@Override
	public boolean register(AdminBean bean) {
		EntityManager manager = factory.createEntityManager();
		EntityTransaction transaction = manager.getTransaction();
		try {
			transaction.begin();
			manager.persist(bean);
			transaction.commit();
			return true;
		} catch (Exception e) {
			throw new AdminException("Id already exists");
		}
	}

	@Override
	public boolean updateAdmin(int adminId, AdminBean bean) {
		try {
			EntityManager manager = factory.createEntityManager();
			EntityTransaction transaction = manager.getTransaction();
			transaction.begin();
			AdminBean bean1 = manager.find(AdminBean.class, adminId);
			bean1.setPassword(bean.getPassword());
			bean1.setAdminName(bean.getAdminName());
			transaction.commit();
			return true;
		} catch (AdminException e) {
			throw new AdminException("Admin not Updated");
		}
	}

	@Override
	public boolean deleteAdmin(int id) {
		try {
			EntityManager manager = factory.createEntityManager();
			EntityTransaction transaction = manager.getTransaction();
			transaction.begin();
			AdminBean bean = manager.find(AdminBean.class, id);
			if (bean != null) {
				manager.remove(id);
				transaction.commit();
				return true;
			}
		} catch (AdminException e) {
			throw new AdminException("Admin not Deleted");
		}
		return false;
	}

	@Override
	public List<AdminBean> getAllAdmin() {
		try {
		String jpql = "from AdminBean";
		EntityManager manager = factory.createEntityManager();
		TypedQuery<AdminBean> query = manager.createQuery(jpql, AdminBean.class);
		return query.getResultList();
		}catch (AdminException e) {
			throw new AdminException("Admin not Found");
		}
	}

	@Override
	public AdminBean login(int adminId, String password) {
		// TODO Auto-generated method stub
		return null;
	}
}
